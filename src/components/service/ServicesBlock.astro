---
import type { serviceSectionType } from "@content/directus";
import RemoteImage from "@components/RemoteImage.astro";
import { marked } from "marked";
import SectionWrapper from "../SectionWrapper.astro";


interface Props  {
    title?: string;
    subtitle?: string;
    sections?: serviceSectionType[]
}

const {title, subtitle, sections} = Astro.props;
---

<SectionWrapper>
    <div class="container mx-auto mb bg-background px-6 lg:px-8">
        <div class="mx-auto max-w-5xl text-center">
            {title && <h2 class="text-3xl font-bold tracking-tight md:text-4xl xl:text-5xl">{title}</h2>}
            {subtitle && <p class="mt-6 text-lg leading-8 text-muted">{subtitle}</p>}
        </div>
    </div>
    <div class="space-y-20">
        {sections && sections.map((s, index: number) => {

            const content = s.text ? marked.parse(s.text) : undefined;
            const imageLeft = index % 2 === 0;

            return (
                    <div class={`flex flex-col items-center gap-8 ${imageLeft ? "md:flex-row" : "md:flex-row-reverse"}`}>
                        {s.image && (
                                <div class="w-full overflow-hidden rounded-lg shadow-lg md:w-1/2" >
                                    <RemoteImage asset={s.image} alt={title||'service-image'} widths={[400, 800]} />
                                </div>
                        )}
                        <div class="w-full space-y-4 md:w-1/2" ><h3
                                class="text-2xl font-bold">{s.title}</h3>
                            <div class="space-y-6">
                                <div class="prose w-full text-lg dark:prose-invert">
                                    <article set:html={content}/>
                                </div>
                            </div>
                        <!--    ul -->
                        </div>
                    </div>
            )

        })}
    </div>
</SectionWrapper>
